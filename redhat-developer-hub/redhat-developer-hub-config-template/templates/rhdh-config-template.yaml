kind: ConfigMap
metadata:
  name:  "rhdh-config-template-{{ $.Values.nameOverride }}"
  namespace: {{ .Values.namespace }}
  annotations:
    {{- include "argocd.syncwave" . | nindent 4 }}
apiVersion: v1
data:
  playbook.yaml: |
    ---
    - name: RHDH Config templates
      hosts: localhost
      tasks:
        - name: Check existence of group
          ansible.builtin.uri:
            url: https://root:{{ $.Values.gitlab.rootPassword }}@{{ $.Values.gitlab.host }}/api/v4/groups/{{ $.Values.rhdh.template.group }}
            method: GET
            validate_certs: false
          register: r_liveness
          retries: 120
          delay: 10
          until: r_liveness.status == 200

        - name: Git config
          ansible.builtin.command: git config --global user.email "{{ $.Values.gitlab.email.address }}"
          ignore_errors: true

        - name: Git config
          ansible.builtin.command: git config --global user.name "{{ $.Values.gitlab.email.displayName }}"
          ignore_errors: true

{{- range $item := .Values.rhdh.template.templates }}

        - name: Build git repo url
          ansible.builtin.set_fact:
            _git_template_repo_url: https://root:{{ $.Values.gitlab.rootPassword }}@{{ $.Values.gitlab.host }}/{{ $.Values.rhdh.template.group }}/{{ $item.project }}

        - name: Remove older repo folders
          shell: rm -rf /tmp/{{ $item.project }}

        - name: Check existence of git repo
          ansible.builtin.uri:
            url: '{{ "{{" }} _git_template_repo_url {{ "}}" }}'
            method: GET
            validate_certs: false
          register: r_liveness
          retries: 60
          delay: 10
          until: r_liveness.status == 200

        - name: Clone {{ $item.project }}
          ansible.builtin.git:
            accept_hostkey: true
            force: true
            repo: '{{ "{{" }} _git_template_repo_url {{ "}}" }}'
            dest: "/tmp/{{ $item.project }}"
            version: "{{ $item.branch }}"
          environment:
            GIT_SSL_NO_VERIFY: "true"
          register: r_git_clone
          retries: 60
          delay: 10
          until: r_git_clone is not failed

{{- range $item1 := $item.templates }}

        - name: Fetch /tmp/{{ $item.project }}/{{ $item1 }} template from remote host
          run_once: true
          ansible.builtin.fetch:
            src: /tmp/{{ $item.project }}/{{ $item1 }}
            dest: /tmp/{{ $item1 }}
            flat: true
            fail_on_missing: true

        - name: Apply template /tmp/{{ $item.project }}/{{ $item1 }}
          ansible.builtin.template:
            src: /tmp/{{ $item1 }}
            dest: /tmp/{{ $item.project }}/{{ $item1 }}
            mode: "0660"         
          vars:
            cluster_subdomain: "{{ $.Values.cluster.subdomain }}"
            backstage_host: "{{ $.Values.backstage.host }}"
            gitlab_host: "{{ $.Values.gitlab.host }}"
            keycloak_host: "{{ $.Values.keycloak.host }}"
            keycloak_realm: "{{ $.Values.keycloak.realm }}"
            keycloak_login_realm: "{{ $.Values.keycloak.loginRealm }}"
            keycloak_client_id: "{{ $.Values.keycloak.clientId }}"
            keycloak_client_secret: "{{ $.Values.keycloak.clientSecret }}"
            argocd_host: "{{ $.Values.gitops.host }}"
            kubernetes_api_url: "{{ $.Values.kubernetes.api }}"
            backstage_backend_secret: {{ randAlphaNum 24 | b64enc }}
            oauth2_proxy_cookie_secret: {{ randAlpha 32 | lower | b64enc }}
            oauth2_proxy_oidc_issuer: "{{ $.Values.oauth2.issuer }}"
            orchestrator_sonataflow_data_index_service: "{{ $.Values.orchestrator.sonataFlowDataIndexService }}"
            postgresql_existingSecret: "{{ $.Values.nameOverride }}-postgresql"
{{- end }}

        - name: Add new files to the repository
          ansible.builtin.command:
            chdir: >-
              /tmp/{{ $item.project }}
            cmd: "git add ."
          ignore_errors: true

        - name: Commit changes to the repository
          ansible.builtin.command:
            chdir: >-
              /tmp/{{ $item.project }}
            cmd: >-
              git commit -a -m 'Updates for starting scenario.'
          ignore_errors: true

        - name: Push all changes back to the project repository
          ansible.builtin.command:
            chdir: >-
              /tmp/{{ $item.project }}
            cmd: >-
              git push {{ "{{" }} _git_template_repo_url {{ "}}" }}-{{ $.Values.nameOverride }}

        - name: Change project visibility
          ansible.builtin.uri:
            url: "https://root:{{ $.Values.gitlab.rootPassword }}@{{ $.Values.gitlab.host }}/api/v4/projects/{{ $.Values.rhdh.template.group }}/{{ $item.project }}-{{ $.Values.nameOverride }}"
            method: PUT
            body_format: json
            body:
              visibility: "public"
            status_code: 200


{{- end }}